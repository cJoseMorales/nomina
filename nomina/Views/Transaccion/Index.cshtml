@model IEnumerable<nomina.Entities.Transaccion>

@{
    ViewData["Title"] = "Transacciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold">Transacciones</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i> Crear nuevo
        </a>
    </div>

    <form asp-action="Index" class="row g-3 mb-4">
        <div class="col-md-3">
            <label for="filter" class="form-label">Buscar</label>
            <input type="text" class="form-control" id="filter" name="filter" value="@ViewData["filter"]" />
        </div>
        <div class="col-md-3">
            <label for="sorting" class="form-label">Buscar por</label>
            <select class="form-select" id="sorting" name="sorting">
                <option value="TIPO_DE_TRANSACCION" selected="@("TIPO_DE_TRANSACCION".Equals(ViewData["sorting"]))">Tipo de transacción</option>
                <option value="EMPLEADO" selected="@("EMPLEADO".Equals(ViewData["sorting"]))">Empleado</option>
            </select>
        </div>
        <div class="col-md-3">
            <label for="since" class="form-label">Desde</label>
            <input type="date" class="form-control" id="since" name="since" value="@((ViewData["since"] as DateTime?)?.ToString("yyyy-MM-dd"))" />
        </div>
        <div class="col-md-3">
            <label for="until" class="form-label">Hasta</label>
            <input type="date" class="form-control" id="until" name="until" value="@((ViewData["until"] as DateTime?)?.ToString("yyyy-MM-dd"))" />
        </div>
        <div class="col-12 d-flex justify-content-end">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Filtrar
            </button>
        </div>
    </form>

    <!-- Table -->
    <div class="table-responsive shadow-sm rounded-3">
        <table class="table table-hover align-middle">
            <thead class="table-light">
            <tr>
                <th>Empleado</th>
                <th>Tipo de Transacción</th>
                <th>@Html.DisplayNameFor(model => model.First().Fecha)</th>
                <th>@Html.DisplayNameFor(model => model.First().Monto)</th>
                <th>Asiento</th>
                <th>@Html.DisplayNameFor(model => model.First().Estado)</th>
                <th class="text-center">Acciones</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Empleado!.Nombre)</td>
                    <td>@Html.DisplayFor(modelItem => item.TipoDeTransaccion!.Nombre)</td>
                    <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                    <td>@($"{item.Monto:C}")</td>
                    <td>@(item.IdAsiento == null ? "No definido" : item.IdAsiento)</td>
                    <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning me-1">
                            <i class="bi bi-pencil-square"></i> Editar
                        </a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info me-1">
                            <i class="bi bi-info-circle"></i> Detalles
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger"
                           onclick="return confirm('¿Estás seguro de que deseas eliminar esta transacción?');">
                            <i class="bi bi-trash"></i> Eliminar
                        </a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
